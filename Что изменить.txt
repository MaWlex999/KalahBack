1. Изменить адрес backend-сервера
---------------------------------

В файле frontend (обычно это KtorService.kt или аналогичный сервис для работы с сетью):

- Найти строку с адресом сервера, например:
  ```kotlin
  private val BASE_URL = "http://10.0.2.2:8080/"
  ```
- Заменить на IP-адрес вашего компьютера в локальной сети, например:
  ```kotlin
  private val BASE_URL = "http://192.168.1.42:8080/"
  ```
  (IP можно узнать командой ipconfig/ifconfig на сервере)

---

2. Добавить поддержку авторизации (JWT)
---------------------------------------

- Для регистрации отправлять POST-запрос на `/auth/register` с телом:
  ```json
  { "login": "user1", "password": "pass123" }
  ```
- Для входа отправлять POST-запрос на `/auth/login` с телом:
  ```json
  { "login": "user1", "password": "pass123" }
  ```
- В ответе на login будет:
  ```json
  { "token": "..." }
  ```
- Сохранять этот токен и передавать его в заголовке всех защищённых запросов:
  ```
  Authorization: Bearer <token>
  ```
  (например, при создании лобби, игры, ходах и т.д.)

---

3. Подключение к WebSocket для обновления игры
----------------------------------------------

- После получения gameId подключаться к WebSocket:
  ```kotlin
  val ws = WebSocket("ws://<IP_СЕРВЕРА>:8080/ws/game/$gameId")
  ```
- Обрабатывать входящие сообщения (JSON с состоянием игры) и обновлять UI.
- Не нужно опрашивать сервер вручную после каждого хода — обновления придут автоматически.

---

4. Проверить работу всех эндпойнтов
-----------------------------------

- /auth/register — регистрация
- /auth/login — авторизация
- /lobby/create — создание лобби (POST, с токеном)
- /lobby/join — вход в лобби (POST, с токеном)
- /game/create — создание игры (POST, с токеном)
- /game/move — ход (POST, с токеном)
- /game/{id} — получение состояния игры (GET, с токеном)
- /ws/game/{gameId} — WebSocket для обновлений

---

5. Прочее
---------

- Если сервер и телефоны в одной Wi-Fi сети — используйте локальный IP сервера.
- Если нужен CORS (для web-версии) — добавить соответствующий плагин на backend.
- Если что-то не работает — проверить консоль браузера/лог приложения на ошибки.

